{%- macro for_type(variable)                     -%}{% for type in variable.types %}{{ type.string }}{% if not loop.last %}, {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro fix_type_isinstance(type)              -%}{% if type.string == 'str' %}unicode_type{% else %}{{ type.string }}{% endif %}{%- endmacro -%}
{%- macro fix_type_docs(type)                    -%}{% if type.string == 'str' %}str|unicode{% else %}{{ type.as_import.full }}{% endif %}{%- endmacro -%}
{%- macro for_type_or_list(variable)             -%}{% for type in variable.types %}{% if type.is_list > 0 %}{{ "list" }}{% else %}{{ fix_type_isinstance(type) }}{% endif %}{% if not loop.last %}, {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro for_type_list_of_full(variable)        -%}{% for type in variable.types %}{% if type.is_list > 0 %}{{ "list of " * type.is_list }}{% endif %}{{ fix_type_docs(type) }}{% if not loop.last %} | {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro for_type_set_of_full(variable)         -%}{% for type in variable.types %}{% if type.is_list > 0 %}{{ "pony.Set(" * type.is_list }}{% endif %}{%  if not type.is_builtin %}"{%  endif %}{{ type.as_import.name }}{%  if not type.is_builtin %}"{%  endif %}{% if type.is_list > 0 %}{{ ")" * type.is_list }}{% endif %}{% endfor %}{%- endmacro -%}
{%- macro for_type_list_of(variable)             -%}{% for type in variable.types %}{% if type.is_list > 0 %}{{ "list of " * type.is_list }}{% endif %}{{ type.string }}{% if not loop.last %} | {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro types_as_tuple(variables, variable)    -%}{% if variables.type|length > 1 %}({{ for_type_or_list(variable) }}){% else -%}{{ for_type_or_list(variable) }}{% endif -%}{%- endmacro -%}
{%- macro for_args_keys(variables)               -%}{%- for variable in variables %}"{{ variable.name }}"{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro for_args_set(variables)                -%}{%- for variable in variables %}{{ variable.name }}={{ variable.name }}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro for_args_none(variables)               -%}{%- for variable in variables %}{{ variable.name }}{% if variable.optional %}=None{% endif %}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro for_args_format_str(variables)         -%}{%- for variable in variables %}{{ variable.name }}={{ "{" }}self.{{ variable.name }}{{ "}" }}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro for_args_format_repr(variables)        -%}{%- for variable in variables %}{{ variable.name }}={{ "{" }}self.{{ variable.name }}{{ "!r}" }}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro types_as_assert_tuple(variable)        -%}{%- if  variable.types|length > 1 %}({{ for_type_or_list(variable) }}){% else -%}{{ for_type_or_list(variable) }}{% endif -%}{%- endmacro -%}
{%- macro for_returns_type(function, do_builtin) -%}{%- for type in function.returns.types if type.is_builtin == False %}{% endfor %}{% endmacro %}
