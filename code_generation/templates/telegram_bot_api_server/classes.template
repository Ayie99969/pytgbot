# -*- coding: utf-8 -*-
from luckydonaldUtils.exceptions import assert_type_or_raise
from luckydonaldUtils.encoding import unicode_type, to_unicode as u
from pydantic import BaseModel
from typing import Any, Union, List, Optional

__author__ = 'luckydonald'

__all__ = [
   {% for clazz in clazzes %} '{{ clazz.clazz -}}Model',{% endfor %}
]

{% include 'fastapi_issue_884_workaround.template' %}


{% for clazz in clazzes %}
{%- if clazz.clazz.clazz %}{% set custom_clazz = clazz %}{% set clazz = custom_clazz.clazz %}{% else %}{% set custom_clazz = None %}{% endif %}

class {{ clazz.clazz -}}Model(BaseModel):  # {{ clazz.parent_clazz.string }}
    {%- if clazz.description or clazz.link -%}
    """
    {%- if clazz.description %}{{ clazz.description.strip()|indent }}{% endif %}{%- if clazz.description and clazz.link %}

    {% endif %}{% if clazz.link %}{{ clazz.link }}{% endif %}
    """
    {% endif %}

    {%- for variable in clazz.variables %}
    {{ variable.name }}: {{ variable.create_typehint_optional_model(json_mode=False, quote_models=True) }}
    {%- endfor %}
# end class {{ clazz.clazz }}
{% endfor %}

# now register all `ForwardRef`s
{% for clazz in clazzes -%}
{{ clazz.clazz }}Model.update_forward_refs()
{% endfor %}
